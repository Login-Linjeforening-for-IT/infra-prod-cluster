---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all
  namespace: tekkom-bot
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-kube-dns
  namespace: tekkom-bot
spec:
  podSelector:
    matchLabels:
      app: tekkom-bot
  policyTypes:
    - Ingress
    - Egress
  egress:
    - to:
        - namespaceSelector: {}
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - protocol: UDP
          port: 53

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ingress-api
  namespace: tekkom-bot
spec:
  podSelector:
    matchLabels:
      app: tekkom-bot
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: nginx-ingress-external
        - podSelector:
            matchLabels:
              app.kubernetes.io/instance: nginx-ingress-external
      ports:
        - protocol: TCP
          port: 6969

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ingress
  namespace: tekkom-bot
spec:
  podSelector:
    matchLabels:
      app: tekkom-bot-api
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: nginx-ingress-external
        - podSelector:
            matchLabels:
              app.kubernetes.io/instance: nginx-ingress-external
      ports:
        - protocol: TCP
          port: 8080

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-egress-to-dizambee
  namespace: tekkom-bot
spec:
  podSelector:
    matchLabels:
      app: tekkom-bot
  policyTypes:
    - Egress
  egress:
    - to:
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: dizambee
      - podSelector:
          matchLabels:
            app: dizambee-api

# Allows tekkom-bot to beekeeper traffic (liveness check)
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-egress-to-beekeeper
  namespace: tekkom-bot
spec:
  podSelector:
    matchLabels:
      app: tekkom-bot
  policyTypes:
    - Egress
  egress:
    - to:
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: beekeeper
      - podSelector:
          matchLabels:
            app: beekeeper-api

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-psql
  namespace: tekkom-bot
spec:
  policyTypes:
    - Ingress
    - Egress
  podSelector:
    matchLabels:
      cnpg.io/cluster: tekkom-bot-api-psql
  ingress:
    - {}
  egress:
    - {}

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-psql-client
  namespace: tekkom-bot
spec:
  policyTypes:
    - Ingress
    - Egress
  podSelector:
    matchLabels:
      app: postgres-client
  ingress:
    - {}
  egress:
    - {}

# Allowing api to kube-dns traffic
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-api-to-kube-dns
  namespace: tekkom-bot
spec:
  podSelector:
    matchExpressions:
      - key: app
        operator: In
        values:
          - tekkom-bot-api
          - tekkom-bot
  policyTypes:
    - Ingress
    - Egress
  egress:
    - to:
        - namespaceSelector: {}
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - protocol: UDP
          port: 53

# Allows tekkom-bot to authentik traffic
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-egress-to-authentik
  namespace: tekkom-bot
spec:
  podSelector:
    matchLabels:
      app: tekkom-bot
  policyTypes:
    - Egress
  egress:
    - to:
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: authentik
      - podSelector:
          matchLabels:
            app: authentik-server
