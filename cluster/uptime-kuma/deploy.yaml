---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: uptime-kuma
  namespace: uptime-kuma
spec:
  selector:
    matchLabels:
      app: uptime-kuma
  replicas: 1
  serviceName: uptime-kuma-headless
  template:
    metadata:
      labels:
        app: uptime-kuma
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - image: louislam/uptime-kuma:1.23.15@sha256:d8b1b2151256bda3a99e822902fcbeb27b3eca6ef6d93fad25d2062b9fb61ad2
          imagePullPolicy: Always
          name: uptime-kuma
          ports:
            - containerPort: 3001
              name: web
              protocol: TCP
          volumeMounts:
            - mountPath: /app/data
              name: uptime-kuma-volume
          resources:
            requests:
              memory: "150Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            exec:
              command:
                - extra/healthcheck
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: web
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
  volumeClaimTemplates:
    - metadata:
        name: uptime-kuma-volume
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "do-block-storage-retain"
        resources:
          requests:
            storage: 10Gi
