---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: authentik
  namespace: authentik
spec:
  interval: 10m
  chart:
    spec:
      chart: authentik
      version: "2024.4.2"
      sourceRef:
        kind: HelmRepository
        name: authentik-repo
        namespace: authentik
      interval: 10m
  values:
    global:
      env:
        - name: AUTHENTIK_STORAGE__MEDIA__BACKEND
          value: s3
        - name: AUTHENTIK_STORAGE__MEDIA__S3__USE_SSL
          value: "true"
        - name: AUTHENTIK_STORAGE__MEDIA__S3__ENDPOINT
          value: https://login-authentik-media.ams3.digitaloceanspaces.com
        - name: AUTHENTIK_STORAGE__MEDIA__S3__ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: do-spaces
              key: accesstoken
        - name: AUTHENTIK_STORAGE__MEDIA__S3__SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: do-spaces
              key: secretkey
        - name: AUTHENTIK_STORAGE__MEDIA__S3__BUCKET_NAME
          value: login-authentik-media
        - name: AUTHENTIK_STORAGE__MEDIA__S3__CUSTOM_DOMAIN
          value: login-authentik-media.ams3.cdn.digitaloceanspaces.com/authentik-media
      volumes:
        - name: authentik-certificate
          projected:
            sources:
              - secret:
                  name: authentik-certificate
                  items:
                    - key: tls.crt
                      path: authentik_cert.pem
                    - key: tls.key
                      path: authentik_cert.key
        - name: postgres-creds
          secret:
            secretName: authentik-db-credentials
        - name: secret-key
          secret:
            secretName: authentik-secret-key
      volumeMounts:
        - name: authentik-certificate
          mountPath: "/certs"
          readOnly: true
        - name: postgres-creds
          mountPath: /postgres-creds
          readOnly: true
        - name: secret-key
          mountPath: /secret-key
          readOnly: true
    authentik:
      secret_key: file:///secret-key/password
      error_reporting:
        enabled: false
        send_pii: false
      postgresql:
        host: auth2-psql-rw.authentik.svc.cluster.local
        name: authentik
        port: 5432
        user: file:///postgres-creds/username
        password: file:///postgres-creds/password
    blueprints:
      configMaps:
        - authentik-blueprints
    postgresql:
      enabled: false
    redis:
      enabled: true
    server:
      autoscaling:
        enabled: true
        minReplicas: 3
      ingress:
        ingressClassName: nginx-ntnu
        annotations:
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
          nginx.ingress.kubernetes.io/upgrade-proxy: "true"
          nginx.ingress.kubernetes.io/enable-websockets: "true"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        enabled: true
        https: true
        tls:
          - hosts:
              - authentik.login.no
        hosts:
          - authentik.login.no
    worker:
      autoscaling:
        enabled: true
        minReplicas: 3
