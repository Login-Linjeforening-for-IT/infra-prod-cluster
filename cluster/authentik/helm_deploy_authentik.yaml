---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: authentik
  namespace: authentik
spec:
  interval: 5m
  chart:
    spec:
      chart: authentik
      version: "2023.10.3"
      sourceRef:
        kind: HelmRepository
        name: authentik-repo
        namespace: authentik
      interval: 1m
  values:
    authentik:
      secret_key: "PleaseGenerateA50CharKey"
      error_reporting:
        enabled: false
        send_pii: false
      postgresql:
        host: authentik-psql-rw.authentik.svc.cluster.local
        name: authentik
        port: 5432
        user: file:///postgres-creds/username
        password: file:///postgres-creds/password
    blueprints:
      - authentik-blueprints
    volumes:
      - name: authentik-certificate
        projected:
          sources:
            - secret:
                name: authentik-certificate
                items:
                  - key: tls.crt
                    path: authentik_cert.pem
                  - key: tls.key
                    path: authentik_cert.key
      - name: postgres-creds
        secret:
          secretName: authentik-postgres-credentials
    volumeMounts:
      - name: authentik-certificate
        mountPath: "/certs"
        readOnly: true
      - name: postgres-creds
        mountPath: /postgres-creds
        readOnly: true
    autoscaling:
      server:
        enabled: true
        minReplicas: 1
      worker:
        enabled: true
        minReplicas: 1
    ingress:
      ingressClassName: nginx-ntnu
      annotations:
        nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        nginx.ingress.kubernetes.io/upgrade-proxy: "true"
        nginx.ingress.kubernetes.io/enable-websockets: "true"
      enabled: true
      tls:
        - hosts:
            - authentik.login.no
      hosts:
        - host: authentik.login.no
          paths:
            - path: "/"
              pathType: Prefix
    postgresql:
      enabled: false
    redis:
      enabled: true
    server:
      volumes:
        - name: postgres-creds
          secret:
            secretName: authentik-db-credentials
